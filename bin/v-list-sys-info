#!/bin/bash
# info: list system os
# options: [FORMAT]
#
# example: v-list-sys-info
#
# This function checks available updates for david packages.

#----------------------------------------------------------#
#                Variables & Functions                     #
#----------------------------------------------------------#

# Argument definition
format=${1-shell}

# Includes
# shellcheck source=/etc/davidcp/david.conf
source /etc/davidcp/david.conf
# shellcheck source=/usr/local/david/func/main.sh
source $DAVID/func/main.sh
# load config file
source_conf "$DAVID/conf/david.conf"

# Retrieve David Control Panel version number
DAVID_VERSION=$(grep VERSION $DAVID/conf/david.conf | cut -d '=' -f2 | sed "s|'||g")
DAVID_RELEASE=$(grep RELEASE_BRANCH $DAVID/conf/david.conf | cut -d '=' -f2 | sed "s|'||g")

# JSON list function
json_list() {
	echo '{'
	echo '    "sysinfo": {
        "HOSTNAME": "'$HOSTNAME'",
        "OS": "'$OS'",
        "VERSION": "'$VERSION'",
        "ARCH": "'$ARCH'",
        "DAVID": "'$DAVID_VERSION'",
        "RELEASE": "'$DAVID_RELEASE'",
        "UPTIME": "'$UPTIME'",
        "LOADAVERAGE": "'$LOADAVERAGE'"
        }'
	echo '}'
}

# SHELL list function
shell_list() {
	echo "HOSTNAME   OS   VER   ARCH  DAVID  RELEASE  UPTIME   LA"
	echo "--------   --   ---   ----  ------  -------  ------   --"
	echo "$HOSTNAME $OS $VERSION $ARCH $DAVID_VERSION $DAVID_RELEASE $UPTIME $LOADAVERAGE"
}

# PLAIN list function
plain_list() {
	echo -e "$HOSTNAME\t$OS\t$VERSION\t$ARCH\t$DAVID_VERSION\t$DAVID_RELEASE\t$UPTIME\t$LOADAVERAGE"
}

# CSV list function
csv_list() {
	echo "HOSTNAME,OS,VERSION,ARCH,DAVID,RELEASE,UPTIME,LOADAVERAGE"
	echo "$HOSTNAME,$OS,$VERSION,$ARCH,$DAVID_VERSION,$DAVID_RELEASE,$UPTIME,$LOADAVERAGE"
}

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Check hostname
HOSTNAME=$(hostname)

# Check OS/Release
if [ -d '/etc/sysconfig' ]; then
	if [ -e '/etc/redhat-release' ]; then
		OS='CentOS'
		VERSION=$(cat /etc/redhat-release | tr ' ' '\n' | grep [0-9])
	else
		OS="Amazon"
		VERSION=$(cat /etc/issue | tr ' ' '\n' | grep [0-9])
	fi
else
	if [ "$(lsb_release -si)" == "Ubuntu" ] && [ -e '/etc/debian_version' ]; then
		OS="Ubuntu"
		VERSION=$(grep DISTRIB_RELEASE /etc/lsb-release | cut -f 2 -d '=')
	else
		distro=$(head -n1 /etc/issue | cut -f 1 -d ' ')
		if [ "$distro" = 'Debian' ]; then
			OS="Debian"
			VERSION=$(cat /etc/debian_version)
		else
			OS='UNKNOWN'
			VERSION='UNKNOWN'
		fi
	fi
fi

# Check architecture
ARCH=$(arch)

# Check uptime
UPTIME=$(cat /proc/uptime | cut -f 1 -d ' ' | cut -f 1 -d .)
UPTIME="$(echo $UPTIME / 60 | bc)"

# Check LoadAverage
LOADAVERAGE=$(cat /proc/loadavg | cut -f 1-3 -d ' ' | sed 's/ / \/ /g')

# Listing data
case $format in
	json) json_list ;;
	plain) plain_list ;;
	csv) csv_list ;;
	shell) shell_list | column -t ;;
esac

#----------------------------------------------------------#
#                       David                             #
#----------------------------------------------------------#

exit
